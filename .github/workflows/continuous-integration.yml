name: Continuous Integration

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  ci:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        version: [18]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: Install Doppler CLI for env (public) variables
        uses: dopplerhq/cli-action@v2

      - name: Setup Pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      # external contributors dont have access to doppler and secrets and need the public env vars
      # TODO add warning to PR Running CI with public env vars with limited test scope
      - run: pnpm run fetch-env:public && pnpm run check-all

        if: ${{ env.DOPPLER_TOKEN == '' }}
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_CI_ENV_TOKEN }}

      - run: doppler run -- pnpm run check-all
        if: ${{ env.DOPPLER_TOKEN != '' }}
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_CI_ENV_TOKEN }}

  versioning:
    # Only run versioning on main branch
    if: github.ref == 'refs/heads/main'

    # Only run if CI passed
    needs: ci

    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Setup Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "pnpm"

       # We don't need to test since CI already passed

      - name: Create Release Pull Request
        uses: changesets/action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-npm-packages:
    # Only run npm_publish on main branch
    if: github.ref == 'refs/heads/main'

    # Only run if versioning passed
    needs: versioning

    runs-on: ubuntu-latest
    environment: npm
    steps:
      - uses: actions/checkout@v3

      - name: Setup Pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: pnpm install

      - name: Install Doppler CLI for env variables
        uses: dopplerhq/cli-action@v2

      # TODO somehow copy over build artifacts from ci job
      - run: doppler run -- pnpm build
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_PRODUCTION_ENV_TOKEN }}

      # We don't need to test since CI already passed
      - name: Set publishing config
        run: pnpm config set '//registry.npmjs.org/:_authToken' "${NPM_AUTH_TOKEN}" && pnpm config set 'git-checks' false
        env:
          NPM_AUTH_TOKEN: ${{secrets.NPM_PUBLISH_TOKEN}}

      - name: create and publish versions
        run: pnpm --filter !vs-code-extension publish -r