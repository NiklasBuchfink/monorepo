import type { Repository } from "@lix-js/client"
import type { CliStep } from "../../utils"
import type { NextJSProject } from "../scan-next-project"
import path from "node:path"

export const createI18nFile: CliStep<
	{
		repo: Repository
		nextProject: NextJSProject
	},
	unknown
> = async (ctx) => {
	const i18nFilePath = path.join(
		ctx.nextProject.srcRoot,
		ctx.nextProject.typescript ? "lib/i18n.ts" : "lib/i18n.js"
	)

	const TypescriptTemplate = `// file generated by the Paraglide-Next init command
import { createI18n } from "@inlang/paraglide-next"
import type { AvailableLanguageTag } from "@/paraglide/runtime"

export const { Link, middleware, useRouter, usePathname, redirect, permanentRedirect, localizePath } 
	= createI18n<AvailableLanguageTag>();
`

	const JavascriptTemplate = `// file generated by the Paraglide-Next init command
import { createI18n } from "@inlang/paraglide-next"

export const { Link, middleware, useRouter, usePathname, redirect, permanentRedirect, localizePath }
	= createI18n();
`

	const file = ctx.nextProject.typescript ? TypescriptTemplate : JavascriptTemplate

	//create the folder if it doesn't exist
	await ctx.repo.nodeishFs.mkdir(path.dirname(i18nFilePath), { recursive: true })
	await ctx.repo.nodeishFs.writeFile(i18nFilePath, file)
	return ctx
}
